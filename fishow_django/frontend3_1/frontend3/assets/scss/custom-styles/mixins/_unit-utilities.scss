// Unit Utilities
@mixin unit-variant($spacing-x, $spacing-y, $breakpoint) {
  .unit#{$breakpoint}-align-center {
    @include justify-content(center);
  }

  //.unit#{$breakpoint}-align-left {
  //  @include justify-content(flex-start);
  //}

  //.unit#{$breakpoint}-align-right {
  //  @include justify-content(flex-end);
  //}

  //.unit#{$breakpoint}-align-justify {
  //  @include justify-content(space-between);
  //}

  //.unit#{$breakpoint}-align-around {
  //  @include justify-content(space-around);
  //}

  //.unit-top,
  //.unit#{$breakpoint}-top{
  //  @include align-items(flex-start);
  //}

  .unit#{$breakpoint}-middle {
    @include align-items(center);
  }

  //.unit#{$breakpoint}-bottom{
  //  @include align-items(flex-end);
  //}

  //.unit#{$breakpoint}-grow-1{
  //  @include flex-grow(1);
  //}

  //.unit#{$breakpoint}-grow-2{
  //  @include flex-grow(2);
  //}

  //.unit#{$breakpoint}-grow-3{
  //  @include flex-grow(3);
  //}

  //.unit-item#{$breakpoint}-top{
  //  @include align-self(flex-start);
  //}

  //.unit-item#{$breakpoint}-middle{
  //  @include align-self(center);
  //}

  //.unit-item#{$breakpoint}-bottom{
  //  @include align-self(flex-end);
  //}

  //.unit-item#{$breakpoint}-narrow{
  //  @include flex-grow(0);
  //}

  //.unit-item#{$breakpoint}-standart{
  //  @include flex-grow(1);
  //}

  //.unit-item#{$breakpoint}-wide{
  //  @include flex-grow(2);
  //}

  .unit#{$breakpoint},
  .unit#{$breakpoint}-vertical {
    @include flex-direction(column);
    @include group($spacing-x, $spacing-y);
  }

  .unit#{$breakpoint}-horizontal {
    @include flex-direction(row);
  }

  //.unit#{$breakpoint}-inverse {
  //  &,
  //  &.unit#{$breakpoint}-vertical {
  //    @include flex-direction(column-reverse);
  //  }
  //
  //  &.unit#{$breakpoint}-horizontal {
  //    @include flex-direction(row-reverse);
  //  }
  //}
}

@mixin unit-spacing-variant($spacing-x, $spacing-y, $breakpoint) {
  $infix: breakpoint-infix($breakpoint);

  &.unit#{$infix},
  &.unit#{$infix}-vertical {
    @include group($spacing-x, $spacing-y);
  }
}

@mixin unit-spacing($breakpoints, $spacing-x, $spacing-y: $spacing-x) {
  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    @include media-breakpoint-up($breakpoint) {
      @include unit-spacing-variant($spacing-x, $spacing-y, $infix);
    }
  }
}

@mixin unit-responsive($breakpoints, $spacing-x, $spacing-y: $spacing-x) {
  .unit {
    @include display-flex();
    @include flex(0 1 100%);
    @include flex-direction(column);
  }

  .unit-body {
    @include flex(0 1 auto);
  }

  .unit-left,
  .unit-right {
    @include flex(0 0 auto);
    max-width: 100%;
  }

  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    @include media-breakpoint-up($breakpoint) {
      @include unit-variant($spacing-x, $spacing-y, $infix);
    }
  }
}